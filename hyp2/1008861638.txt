client-server applications use the tls protocol to communicate across a network in a way designed to prevent eavesdropping and tampering since applications can communicate either with or without tls ( or ssl ) , it is necessary for the client to indicate to the server the setup of a tls connection one of the main ways of achieving this is to use a different port number for tls connections , for example port 443 for https another mechanism is for the client to make a protocol-specific request to the server to switch the connection to tls ; for example , by making a starttls request when using the mail and news protocols once the client and server have agreed to use tls , they negotiate a stateful connection by using a handshaking procedure tls and ssl do not fit neatly into any single layer of the osi model or the tcp/ip model however , applications generally use tls as if it were a transport layer , even though applications using tls must actively control initiating tls handshakes and handling of exchanged authentication certificates to provide the server name , transport layer security ( tls ) extensions allow clients to include a server name indication extension ( sni ) in the extended clienthello message also documents a method to implement name-based virtual hosting by upgrading http to tls via an http/1.1 upgrade header the current approved version of tls is version 1.3 , which is specified in : : '' the transport layer security ( tls ) protocol version 1.3 '' : '' the transport layer security ( tls ) protocol version 1.2 '' as well as the never standardized ssl 2.0 and 3.0 , which are considered obsolete : //tools.ietf.org/html/draft-hickman-netscape-ssl-00 internet draft ( 1995 ) , ssl version 2.0 : '' the secure sockets layer ( ssl ) protocol version 3.0 '' : '' upgrading to tls within http/1.1 '' , explains how to use the http/1.1 upgrade header to initiate transport layer security ( tls ) over an existing tcp connection this allows unsecured and secured http traffic to share the same well known port ( in this case , http : at 80 rather than https : at 443 ) : '' http over tls '' , distinguishes secured traffic from insecure traffic by the use of a different 'server port ' : '' addition of camellia cipher suites to transport layer security ( tls ) '' : '' addition of seed cipher suites to transport layer security ( tls ) '' : '' camellia cipher suites for tls '' : '' transport layer security ( tls ) extensions : extension definitions '' , includes server name indication and ocsp stapling : '' summarizing known attacks on transport layer security ( tls ) and datagram tls ( dtls ) '' : '' recommendations for secure use of transport layer security ( tls ) and datagram transport layer security ( dtls ) '' 