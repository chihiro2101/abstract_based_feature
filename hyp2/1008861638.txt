client-server applications use the tls protocol to communicate across a network in a way designed to prevent eavesdropping and tampering since applications can communicate either with or without tls ( or ssl ) , it is necessary for the client to indicate to the server the setup of a tls connection one of the main ways of achieving this is to use a different port number for tls connections , for example port 443 for https once the client and server have agreed to use tls , they negotiate a stateful connection by using a handshaking procedure the certificate contains the hostname , the trusted certificate authority ( ca ) that vouches for the authenticity of the certificate , and the server 's public encryption key tls and ssl do not fit neatly into any single layer of the osi model or the tcp/ip model tls runs '' on top of some reliable transport protocol ( e.g however , applications generally use tls as if it were a transport layer , even though applications using tls must actively control initiating tls handshakes and handling of exchanged authentication certificates to provide the server name , transport layer security ( tls ) extensions allow clients to include a server name indication extension ( sni ) in the extended clienthello message this extension hints to the server immediately which name the client wishes to connect to , so the server can select the appropriate certificate to send to the clients the current approved version of tls is version 1.3 , which is specified in : : '' the transport layer security ( tls ) protocol version 1.3 '' : '' the transport layer security ( tls ) protocol version 1.2 '' specifies an extension to the smtp service that allows an smtp server and client to use transport-layer security to provide private , authenticated communication over the internet : '' addition of seed cipher suites to transport layer security ( tls ) '' : '' pre-shared key ciphersuites for transport layer security ( tls ) '' , adds three sets of new cipher suites for the tls protocol to support authentication based on pre-shared keys : '' transport layer security ( tls ) extensions '' describes both a set of specific extensions and a generic extension mechanism : '' camellia cipher suites for tls '' : '' transport layer security ( tls ) extensions : extension definitions '' , includes server name indication and ocsp stapling : '' encrypt-then-mac for transport layer security ( tls ) and datagram transport layer security ( dtls ) '' : '' summarizing known attacks on transport layer security ( tls ) and datagram tls ( dtls ) '' : '' recommendations for secure use of transport layer security ( tls ) and datagram transport layer security ( dtls ) '' 