state diagrams are used to give an abstract description of the behavior of a system this behavior is analyzed and represented by a series of events that can occur in one or more possible states hereby '' each diagram usually represents objects of a single class and track the different states of its objects through the system '' state diagrams can be used to graphically represent finite-state machines ( also called finite automata ) another source is taylor booth in his 1967 book sequential machines and automata theory an edge is usually drawn as an arrow directed from the present state to the next state the start state q 0 âˆˆ q is usually represented by an arrow with no origin pointing to the state mcclusky , introduction to the theory of switching circuits , mcgraw-hill , 1965 the start state is not shown and must be inferred from the text sometimes the accept state ( s ) function as '' final '' ( halt , trapped ) states for a moore machine the state 's output is usually written inside the state 's circle , also separated from the state 's designator with a slash '' / '' '' q5/1,0 '' designates state q5 with outputs a 1 , b 0 s 1 and s 2 are states and s 1 is an accepting state or a final state this can lead to a very large number of nodes and transitions between nodes for all but the simplest of systems ( state and transition explosion ) the current state of each cross-functional state machine in the statechart defines the state of the system the harel statechart is equivalent to a state diagram but it improves the readability of the resulting diagram so it is not a state , but when applied to the program 's state , it results in a transition to another state executing the program graph ( parsing and interpreting ) results in a state graph in this case before executing a command the program counter is at some position ( state before the command is executed ) however , if the state includes variables , then if those change value , we can be at the same program location with different variable values , meaning in a different state in the program 's state space a state in a state machine is an efficient way of specifying a particular behavior , rather than a stage of processing 