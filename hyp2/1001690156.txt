the primary goal of research in combinatorial computational geometry is to develop efficient algorithms and data structures for solving problems stated in terms of basic geometrical objects : points , line segments , polygons , polyhedra , etc consider , for example , the closest pair problem : given n points in the plane , find the two with the smallest distance from each other a classic result in computational geometry was the formulation of an algorithm that takes o ( n log n ) a simple randomized sieve algorithm for the closest-pair problem , 118 ( 1 ) :34â€”37,1995 ( pdf ) as well as a deterministic algorithm that takes o ( n log log n ) time , s the core problems in computational geometry may be classified in different ways , according to various criteria delaunay triangulation voronoi diagram : given a set of points , partition the space according to which points are closest to the given points linear programming closest pair of points : given a set of points , find the two with the smallest distance from each other polygon triangulation : given a polygon , partition its interior into triangles mesh generation boolean operations on polygons the computational complexity for this class of problems is estimated by the time and space ( computer memory ) required to solve a given problem instance point location : given a partitioning of the space into cells , produce a data structure that efficiently tells in which cell a query point is located if the search space is fixed , the computational complexity for this class of problems is usually estimated by : the time and space required to construct the data structure to be searched in the time ( and sometimes an extra space ) to answer queries 