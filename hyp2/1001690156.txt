the following general classes may be distinguished delaunay triangulation voronoi diagram : given a set of points , partition the space according to which points are closest to the given points farthest pair of points largest empty circle : given a set of points , find a largest circle with its center inside of their convex hull and enclosing none of them polygon triangulation : given a polygon , partition its interior into triangles mesh generation boolean operations on polygons the computational complexity for this class of problems is estimated by the time and space ( computer memory ) required to solve a given problem instance in geometric query problems , commonly known as geometric search problems , the input consists of two parts : the search space part and the query part , which varies over the problem instances nearest neighbor : preprocess a set of points , in order to efficiently find which point is closest to a query point ray tracing : given a set of objects in space , produce a data structure that efficiently tells which object a query ray intersects first if the search space is fixed , the computational complexity for this class of problems is usually estimated by : the time and space required to construct the data structure to be searched in the time ( and sometimes an extra space ) to answer queries any of the computational geometric problems may be converted into a dynamic one , at the cost of increased processing time for example , the range searching problem may be converted into the dynamic range searching problem by providing for addition and/or deletion of the points the computational complexity for this class of problems is estimated by : the time and space required to construct the data structure to be searched in the time and space to modify the searched data structure after an incremental change in the search space the time ( and sometimes an extra space ) to answer a query 