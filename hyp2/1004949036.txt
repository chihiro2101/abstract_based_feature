in vector-based graphics editing , each leaf node in a scene graph represents some atomic unit of the document , usually a shape such as an ellipse or bezier path although shapes themselves ( particularly paths ) can be decomposed further into nodes such as spline nodes , it is practical to think of the scene graph as composed of shapes rather than going to a lower level of representation internally , there may be no real structural difference between layers and groups at all , since they are both just nodes of a scene graph in such applications , nodes in a scene graph ( generally ) represent entities or objects in the scene the scene graph would have a 'horse ' node with a 'knight ' node attached to it the scene graph may also describe the spatial , as well as the logical , relationship of the various entities : the knight moves through 3d space as the horse moves in these large applications , memory requirements are major considerations when designing a scene graph for this reason , many large scene graph systems use geometry instancing to reduce memory costs and increase speed this means that only a single copy of the data is kept , which is then referenced by any 'knight ' nodes in the scene graph other common operations , such as checking to see point location are also done via linear searches applying an operation on a scene graph requires some way of dispatching an operation based on a node 's type but since the underlying implementation of the rendering api usually lacks portability , one might separate the scene graph and rendering systems instead one alternative is scene graph rebuilding , where the scene graph is rebuilt for each of the operations performed a traversal generally consists of starting at some arbitrary node ( often the root of the scene graph ) , applying the operation ( s ) ( often the updating and rendering operations are applied one after the other ) , and recursively moving down the scene graph ( tree ) to the child nodes , until a leaf node is reached once the operation finishes traversing all the children of a node , it calls the node 's post-render operation so that the transformation node can undo the transformation some scene graph operations are actually more efficient when nodes are traversed in a different order â€“ this is where some systems implement scene graph rebuilding to reorder the scene graph into an easier-to-parse format or tree for example , in 2d cases , scene graphs typically render themselves by starting at the tree 's root node and then recursively draw the child nodes this may not be the typical view of a scene graph , but there are benefits to including a bvh in a scene graph the hoops 3d graphics system appears to have been the first commercial scene graph library provided by a single software vendor graph ( data structure ) graph theory space partitioning tree ( data structure ) 