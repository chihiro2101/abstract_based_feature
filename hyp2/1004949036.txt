internally , there may be no real structural difference between layers and groups at all , since they are both just nodes of a scene graph if differences are needed , a common type declaration in c++ would be to make a generic node class , and then derive layers and groups as subclasses scene graphs in games and 3d applications scene graphs are useful for modern games using 3d graphics and increasingly large worlds or levels in such applications , nodes in a scene graph ( generally ) represent entities or objects in the scene for instance , a game might define a logical relationship between a knight and a horse so that the knight is considered an extension to the horse the scene graph would have a 'horse ' node with a 'knight ' node attached to it the scene graph may also describe the spatial , as well as the logical , relationship of the various entities : the knight moves through 3d space as the horse moves in these large applications , memory requirements are major considerations when designing a scene graph this means that only a single copy of the data is kept , which is then referenced by any 'knight ' nodes in the scene graph the simplest form of scene graph uses an array or linked list data structure , and displaying its shapes is simply a matter of linearly iterating the nodes one by one scene graph operations and dispatch applying an operation on a scene graph requires some way of dispatching an operation based on a node 's type one alternative is scene graph rebuilding , where the scene graph is rebuilt for each of the operations performed for example , consider a render operation that takes transformations into account : while recursively traversing down the scene graph hierarchy , a pre-render operation is called once the operation finishes traversing all the children of a node , it calls the node 's post-render operation so that the transformation node can undo the transformation for example , in 2d cases , scene graphs typically render themselves by starting at the tree 's root node and then recursively draw the child nodes this may not be the typical view of a scene graph , but there are benefits to including a bvh in a scene graph iris inventor 1.0 ( 1992 ) was released by sgi , which was a high level scene graph built on top of performer graph ( data structure ) graph theory space partitioning tree ( data structure ) 