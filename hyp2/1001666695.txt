they were also often equipped with modems so they could be used remotely from character-mode terminals via dial-up telephone lines uucp used the computers ' modems to dial out to other computers , establishing temporary , point-to-point links between them each system in a uucp network has a list of neighbor systems , with phone numbers , login names and passwords , etc when work ( file transfer or command execution requests ) is queued for a neighbor system , the program typically calls that system to process the work over time , dial-up links were replaced by internet connections , and uucp added a number of new link layer protocols today , uucp is rarely used over dial-up links , but is occasionally used over tcp/ip the number of systems involved , as of early 2006 , ran between 1500 and 2000 sites across 60 enterprises uucp 's longevity can be attributed to its low cost , extensive logging , native failover to dialup , and persistent queue management uucp is normally started by having a user log into the target system and then running the uucp program in most cases , this is automated by logging into a known user account used for transfers , whose account 's shell has been set to when uucico runs , it will expect to receive commands from another uucp program on the caller 's machine and begin a session for instance , when the caller responds with their system name , the called system may optionally hang up if it does not recognize the caller , sending the ryou are unknown to me\0 response string and then disconnecting if the two systems successfully handshake , the caller will now begin to send a series of file requests there are four types : : s causes a file to be sent from the caller to the called system ( upload ) when the s command is received on the called system , it responds with sy if it succeeded and it is ready to accept the file , or snx if it failed , where x is a failure reason : r is a request for the called system to send a file to the caller ( download ) some systems will simply hang up on the successful reception of the h command and not bother with the final handshake the protocol originated as a general-purpose system for packet delivery , and thus offers a number of features that are not used by the uucp package as a whole these extra features may not be available in some implementations of the uucp stack the packet format consisted of a 6-byte header and then between zero and 4096 bytes in the payload this is followed by a single byte , known as '' k '' , containing a value of 1 to 8 indicating a packet size from 32 to 4096 bytes , or a 9 indicating a control packet the next two bytes were a 16-bit checksum of the payload , not including the header tt is the packet type , 0 for control packets ( which also requires k 9 to be valid ) , 1 for alternate data ( not used in uucp ) , 2 for data , and 3 indicates a short packet that re-defines the meaning of k in a data packet , xxx is the packet number for this packet from 0 to 7 , and yyy is the last that was received correctly the protocol allows packets to size from 64 to 4096 8-bit bytes , and windows that include 1 to 7 packets uucp was originally written at at & t bell laboratories by mike lesk user barbox ! user would generally publish their uucp email address in a form such as … ! bigsite ! foovax ! barbox ! user uucp works where it needs to ; some hosts punt mail out of smtp queue into uucp queues on gateway machines if a many uucp hosts , particularly those at universities , were also connected to the internet in its early years , and e-mail gateways between internet smtp-based mail and uucp mail were developed the uux command is used to execute a command on a remote system , or to execute a command on the local system using files from remote systems setting up taylor uucp + qmail on freebsd 5.1 taylor uucp is a gpl licensed uucp package taylor uucp documentation – useful information about uucp in general and various uucp protocols 