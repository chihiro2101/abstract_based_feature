curry 's paradox uses a particular kind of self-referential conditional sentence , as demonstrated in this example : even though germany does not border china , the example sentence certainly is a natural-language sentence , and so the truth of that sentence can be analyzed first , common natural-language proof techniques can be used to prove that the example sentence is true second , the truth of the example sentence can be used to prove that germany borders china the claim '' germany borders china '' could be replaced by any other claim , and the sentence would still be provable to produce curry 's paradox , as described in the two steps above , apply this method to the sentence '' if this sentence is true , then germany borders china '' here a , '' this sentence is true '' , refers to the overall sentence , while b is '' germany borders china '' now , because we have proved '' if this sentence is true , then 'germany borders china ' is true '' , then we can again apply modus ponens , because we know that the claim '' this sentence is true '' is correct curry 's paradox also occurs in some varieties of formal logic in this context , it shows that if we assume there is a formal sentence ( x → y ) , where x itself is equivalent to ( x → y ) , then we can prove y with a formal proof one example of such a formal proof is as follows by contrast , the previous section shows that in natural ( unformalized ) language , for every natural language statement y there is a natural language statement z such that z is equivalent to ( z → y ) in natural language lambda terms describe values from the lambda calculus domain when translating expressions from mathematics to lambda calculus , the domain of lambda calculus terms is not always isomorphic to the domain of the mathematical expressions but each call to eval in that natural language may be translated into mathematics in a way that is consistent russell 's paradox girard 's paradox kleene–rosser paradox liar paradox list of paradoxes richard 's paradox zermelo–fraenkel set theory fixed-point combinator deductive lambda calculus let expression 