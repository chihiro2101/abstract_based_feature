suppose a library has 10 identical study rooms , to be used by one student at a time if no rooms are free , students wait at the desk until someone relinquishes a room when a student has finished using a room , the student must return to the desk and indicate that one room has become free if someone requests a room and the current value of the semaphore is 0 , the little book of semaphores allen b the paradigm is especially powerful because the semaphore count may serve as a useful trigger for a number of different actions the value of the semaphore s is the number of units of the resource that are currently available the v operation is the inverse : it makes a resource available again after the process has finished using it one important property of semaphore s is that its value can not be changed except by using the v and p operations if the new value of the semaphore variable is negative , the process executing is blocked ( i.e : increments the value of semaphore variable by 1 after the increment , if the pre-increment value was negative ( meaning there are processes waiting for a resource ) , it transfers a blocked process from the semaphore 's waiting queue to the ready queue many operating systems provide efficient semaphore primitives that unblock a waiting process when the semaphore is incremented the modified v and p operations are as follows , using square brackets to indicate atomic operations , i.e to avoid starvation , a semaphore has an associated queue of processes ( usually with fifo semantics ) if a process performs a p operation on a semaphore that has the value zero , the process is added to the semaphore 's queue and its execution is suspended when another process increments the semaphore by performing a v operation , and there are processes on the queue , one of them is removed from the queue and resumes execution when processes have different priorities the queue may be ordered by priority , so that the highest priority process is taken from the queue first in the absence of such a hardware instruction , an atomic operation may be synthesized through the use of a mutual exclusion software solutions to solve this problem in a multiprocessor system a locking variable can be used to control access to the semaphore alternatively a mutex could be used in place of the binary semaphore 