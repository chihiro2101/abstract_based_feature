suppose a library has 10 identical study rooms , to be used by one student at a time if no rooms are free , students wait at the desk until someone relinquishes a room when a student has finished using a room , the student must return to the desk and indicate that one room has become free the room can be used for as long as desired , and so it is not possible to book rooms ahead of time in this scenario the front desk count-holder represents a counting semaphore , the rooms are the resource , and the students represent processes/threads when a student requests a room , they are granted access , and the value of the semaphore is changed to 9 if someone requests a room and the current value of the semaphore is 0 , the little book of semaphores allen b when used to control access to a pool of resources , a semaphore tracks only how many resources are free ; it does not keep track of which of the resources are free some other mechanism ( possibly involving more semaphores ) may be required to select a particular free resource counting semaphores are equipped with two operations , historically denoted as p and v ( see for alternative names ) the value of the semaphore s is the number of units of the resource that are currently available the p operation wastes time or sleeps until a resource protected by the semaphore becomes available , at which time the resource is immediately claimed one important property of semaphore s is that its value can not be changed except by using the v and p operations a simple way to understand ( p ) and ( v ) operations is : : decrements the value of semaphore variable by 1 if the new value of the semaphore variable is negative , the process executing is blocked ( i.e : increments the value of semaphore variable by 1 after the increment , if the pre-increment value was negative ( meaning there are processes waiting for a resource ) , it transfers a blocked process from the semaphore 's waiting queue to the ready queue to solve this problem in a multiprocessor system a locking variable can be used to control access to the semaphore whenever a user logs out , v is called , incrementing s by 1 representing a login slot that has become available alternatively a mutex could be used in place of the binary semaphore 