the xmpp network architecture is reminiscent of the simple mail transfer protocol ( smtp ) , a client–server model ; clients do not talk directly to one another as it is decentralized - anyone can run a server however , anyone may run their own xmpp server on their own domain every user on the network has a unique xmpp address , called jid ( for historical reasons , xmpp addresses are often called jabber ids ) the jid is structured like an email address with a username and a domain name ( or ip address rfc 6122 ) for the server where that user resides , separated by an at sign ( ) - for example , “ alice example.com “ : here alice is the username and example.com the server with which the user is registered for example , the full jid of a user 's mobile account could be username example.com/mobile the original and '' native '' transport protocol for xmpp is transmission control protocol ( tcp ) , using open-ended xml streams over long-lived tcp connections in the original specification , xmpp could use http in two ways : polling and binding the polling method , now deprecated , essentially implies messages stored on a server-side database are being fetched ( and posted ) regularly by an xmpp client by way of http 'get ' and 'post ' requests thus , in scenarios where the tcp port used by xmpp is blocked , a server can listen on the normal http port and the traffic should pass without problems the xmpp standards foundation or xsf ( formerly the jabber software foundation ) is active in developing open xmpp extensions , so called xep cloud computing and storage systems rely on various forms of communication over multiple levels , including not only messaging between systems to relay state but also the migration or distribution of larger objects , such as storage or virtual machines along with authentication and in-transit data protection , xmpp can be applied at a variety of levels and may prove ideal as an extensible middleware or message-oriented middleware ( mom ) protocol at the moment , xmpp does not support quality of service ( qos ) ; assured delivery of messages has to be built on-top of the xmpp layer since xml is text based , normal xmpp has a higher network overhead compared to purely binary solutions the best example of this is the jingle xmpp extension protocol , xep-0166 unlike instant messaging , xmpp provides this access at the server level by communicating via special gateway services running alongside an xmpp server any user can '' register '' with one of these gateways by providing the information needed to log on to that network , and can then communicate with users of that network as though they were xmpp users as a result , any client that fully supports xmpp can access any network with a gateway without extra code in the client , and without the need for the client to have direct access to the internet some of the largest messaging providers use , or have been using , various forms of xmpp based protocols in their backend systems without necessarily exposing this fact to their end users the early jabber community focused on open-source software , mainly the jabberd server , but its major outcome proved to be the development of the xmpp protocol the early jabber protocol , as developed in 1999 and 2000 , formed the basis for xmpp as published in rfc 3920 and rfc 3921 in october 2004 ( the primary changes during formalization by the ietf 's xmpp working group were the addition of tls for channel encryption and sasl for authentication ) in addition to these core protocols standardized at the ietf , the xmpp standards foundation ( formerly the jabber software foundation ) is active in developing open xmpp extensions rfc 6121 , extensible messaging and presence protocol ( xmpp ) : instant messaging and presence describes instant messaging ( im ) , the most common application of xmpp 