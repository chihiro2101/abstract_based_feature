unpredictable random numbers were first investigated in the context of gambling , and many randomizing devices such as dice , shuffling playing cards , and roulette wheels , were first developed for such use fairly produced random numbers are vital to electronic gambling and ways of creating them are sometimes regulated by governmental gaming commissions random numbers are also used for non-gambling purposes , both where their use is mathematically important , such as sampling for opinion polls , and in situations where fairness is approximated by randomization , such as conscription and selecting jurors the major use for hardware random number generators is in the field of data encryption , for example to create random cryptographic keys and nonces needed to encrypt and sign data they are a more secure alternative to pseudorandom number generators ( prngs ) , software programs commonly used in computers to generate '' random '' numbers although these pseudorandom sequences pass randomness tests , by knowing the algorithm and the conditions used to initialize it , called the '' seed '' , the output can be predicted hardware random number generators produce sequences of numbers that are assumed not to be predictable , and therefore provide the greatest security when used to encrypt data one early way of producing random numbers was by a variation of the same machines used to play keno or select lottery numbers this method gives reasonable results in some senses , but the random numbers generated by this means are expensive on 29 april 1947 , rand corporation began generating random digits with an '' electronic roulette wheel '' , consisting of a random frequency pulse source of about 100,000 pulses per second gated once per second with a constant frequency pulse and fed into a five-bit binary counter for a noise source ( most likely the well known behavior of the 6d4 miniature gas thyratron tube , when placed in a magnetic field ) it has been a useful source for simulations , modeling , and for deriving the arbitrary constants in cryptographic algorithms to demonstrate that the constants had not been selected maliciously physical phenomena with random properties and , because the world exists at a temperature above absolute zero , every system has some random variation in its state ; for instance , molecules of gases composing air are constantly bouncing off each other in a random way ( see statistical mechanics because the outcome of quantum-mechanical events can not be predicted even in principle , they are the ‘ gold standard ’ for random number generation some quantum phenomena used for random number generation include : shot noise , a quantum mechanical noise source in electronic circuits gas diode and thyratron electron tubes in a crosswise magnetic field can generate substantial noise energy ( 10 volts or more into high impedance loads ) but have a very peaked energy distribution and require careful filtering to achieve flatness across a broad spectrum they are somewhat vulnerable to attack by lowering the temperature of the system , though most systems will stop operating at temperatures low enough to reduce noise by a factor of two ( e.g some of the thermal phenomena used include : thermal noise from a resistor , amplified to provide a random voltage source avalanche noise generated from an avalanche diode , or zener breakdown noise from a reverse-biased zener diode noise ( radio ) , detected by a radio receiver attached to a pc ( though much of it , such as lightning noise , is not properly thermal noise , but most likely a chaotic phenomenon ) in the absence of quantum effects or thermal noise , other phenomena that tend to be random , although in ways not easily characterized by laws of physics , can be used when several such sources are combined carefully ( as in , for example , the yarrow algorithm or fortuna csprngs ) , enough entropy can be collected for the creation of cryptographic keys and nonces , though generally at restricted rates the advantage is that this approach needs , in principle , no special hardware for instance , the forward-security of the generator in linux 2.6.10 kernel could be broken with 2 64 or 2 96 time complexity that output is then debiased using a von neumann type decorrelation step ( see below ) user software can access the generated random bit stream using new non-privileged machine language instructions since the alarm will not always trigger in exactly one tick , the least significant bits of a count of loop iterations , between setting the alarm and its trigger , will vary randomly , possibly enough for some uses what it can do ( with significant numbers of discarded bits ) is transform a biased random bit stream into an unbiased one other designs use what are believed to be true random bits as the key for a high quality block cipher algorithm , taking the encrypted output as the random bit stream the basic design is to maintain an '' entropy pool '' of random bits that are assumed to be unknown to an attacker just as with other components of a cryptography system , a software random number generator should be designed to resist certain attacks hardware random number generators should be constantly monitored for proper operation 