dht research was originally motivated , in part , by peer-to-peer ( p2p ) systems such as freenet , gnutella , bittorrent and napster , which took advantage of resources distributed across the internet to provide a single useful application in particular , they took advantage of increased bandwidth and hard disk capacity to provide a file-sharing service gnutella and similar networks moved to a query flooding model in essence , each search would result in a message being broadcast to every other machine in the network freenet is fully distributed , but employs a heuristic key-based routing in which each file is associated with a key , and files with similar keys tend to cluster on a similar set of nodes queries are likely to be routed through the network to such a cluster without needing to visit many peers distributed hash tables use a more structured key-based routing in order to attain both the decentralization of freenet and gnutella , and the efficiency and guaranteed results of napster researchers included sylvia ratnasamy , ion stoica , hari balakrishnan and scott shenker outside academia , dht technology has been adopted as a component of bittorrent and in the coral content distribution network dhts characteristically emphasize the following properties : decentralized computing : the nodes collectively form the system without any central coordination scalability : the system should function efficiently even with thousands or millions of nodes and to allow participants to remain anonymity , though this is less common than in many other peer-to-peer ( especially file sharing ) systems ; see anonymous p2p dipsea : a modular distributed hash table an overlay network then connects the nodes , allowing them to find the owner of any given key in the keyspace to index a file with given and in the dht , the sha-1 hash of is generated , producing a 160-bit key , and a message is sent to any node participating in the dht the message is forwarded from node to node through the overlay network until it reaches the single node responsible for key as specified by the keyspace partitioning any other client can then retrieve the contents of the file by again hashing to produce and asking any dht node to find the data associated with with a message the message will again be routed through the overlay to the node responsible for , which will reply with the stored most dhts use some variant of consistent hashing or rendezvous hashing to map keys to nodes the two algorithms appear to have been devised independently and simultaneously to solve the distributed hash table problem aside from routing , there exist many algorithms that exploit the structure of the overlay network for sending a message to all nodes , or a subset of nodes , in a dht in the real world the key could be a hash of a file 's content rather than a hash of a file 's name to provide content-addressable storage , so that renaming of the file does not prevent users from finding it in some dhts , publishing of nodes ' ids is also used to optimize dht operations the key pair can be stored in more than one node corresponding to the key 