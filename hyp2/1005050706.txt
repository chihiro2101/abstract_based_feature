dht research was originally motivated , in part , by peer-to-peer ( p2p ) systems such as freenet , gnutella , bittorrent and napster , which took advantage of resources distributed across the internet to provide a single useful application freenet is fully distributed , but employs a heuristic key-based routing in which each file is associated with a key , and files with similar keys tend to cluster on a similar set of nodes distributed hash tables use a more structured key-based routing in order to attain both the decentralization of freenet and gnutella , and the efficiency and guaranteed results of napster one drawback is that , like freenet , dhts only directly support exact-match search , rather than keyword search , although freenet 's routing algorithm can be generalized to any key type where a closeness operation can be defined a project called the infrastructure for resilient internet systems ( iris ) was funded by a 12 million grant from the united states national science foundation in 2002 scalability : the system should function efficiently even with thousands or millions of nodes and to allow participants to remain anonymity , though this is less common than in many other peer-to-peer ( especially file sharing ) systems ; see anonymous p2p an overlay network then connects the nodes , allowing them to find the owner of any given key in the keyspace the message is forwarded from node to node through the overlay network until it reaches the single node responsible for key as specified by the keyspace partitioning any other client can then retrieve the contents of the file by again hashing to produce and asking any dht node to find the data associated with with a message the two algorithms appear to have been devised independently and simultaneously to solve the distributed hash table problem both consistent hashing and rendezvous hashing have the essential property that removal or addition of one node changes only the set of keys owned by the nodes with adjacent ids , and leaves all other nodes unaffected contrast this with a traditional hash table in which addition or removal of one bucket causes nearly the entire keyspace to be remapped consistent hashing employs a function \delta ( k_1 , k_2 ) that defines an abstract notion of the distance between the keys k_1 and k_2 , which is unrelated to geographical distance or network latency each node is assigned a single key called its identifier ( id ) if i_1 and i_2 are two adjacent ids , with a shorter clockwise distance from i_1 to i_2 , then the node with id i_2 owns all the keys that fall between i_1 and i_2 aside from routing , there exist many algorithms that exploit the structure of the overlay network for sending a message to all nodes , or a subset of nodes , in a dht because of the decentralization , fault tolerance , and scalability of dhts , they are inherently more resilient against a hostile attacker than a centralized system most notable differences encountered in practical instances of dht implementations include at least the following : the address space is a parameter of dht in the simplest case , is just a random number that is directly used as key ( so in a 160-bit dht will be a 160-bit number , usually randomly chosen ) the key pair can be stored in more than one node corresponding to the key of course , such an algorithm requires nodes to publish their presence data in the dht so the iterative lookups can be performed apache cassandra baton overlay mainline dht â€“ standard dht used by bittorrent ( based on kademlia as provided by khashmir ) tribler wiki retrieved january 2010 