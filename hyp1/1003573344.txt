a symbolic link contains a text string that is automatically interpreted and followed by the operating system as a path to another file or directory the symbolic link is a second file that exists independently of its target if a symbolic link points to a target , and sometime later that target is moved , renamed or deleted , the symbolic link is not automatically updated or deleted , but continues to exist and still points to the old target , now a non-existing location or file symbolic links are different from hard links hard links do not link paths on different volumes or file system , whereas symbolic links may point to any file or directory irrespective of the volumes on which the link and target reside hard links always refer to an existing file , whereas symbolic links may contain an arbitrary path that does not point to anything symbolic links operate transparently for many operations : programs that read or write to files named by a symbolic link will behave as if operating directly on the target file in posix-compliant operating systems , symbolic links are created with the symlink symlink , symlinkat when the ln -s flag is specified , the symlink ( ) system call is used instead , creating a symbolic link the following command creates a symbolic link at the command-line interface ( shell ) : ln -s target_path link_path target_path is the relative or absolute path to which the symbolic link should point after creating the symbolic link , it may generally be treated as an alias for the target the posix directory listing application , ls , denotes symbolic links with an arrow after the name , pointing to the name of the target file ( see following example ) , when the long directory list is requested ( -l option ) when a directory listing of a symbolic link that points to a directory is requested , only the link itself will be displayed note : in the example below do not create '' three '' directory before creation of link in /tmp directory the file contained the textual reference to the link 's target , and the file mode bits indicated that the type of the file is a symbolic link only when a link points to a file in the same directory do '' fast symlinks '' provide significantly better performance than other symlinks the file system permissions of a symbolic link are not used ; the access modes of the target file are controlled by the target file 's own permissions some operating systems , such as freebsd , offer the ability to modify file permissions and filesystem attributes of a symbolic link , through lchmod and lchflags system calls respectively third-party drivers are required to enable support for ntfs symbolic links in windows xp additionally , the ntfs symbolic link implementation provides full support for cross-filesystem links createsymboliclink function , msdn library , win32 and com development windows 7 and vista support a maximum of 31 reparse points ( and therefore symbolic links ) for a given path ( i.e this behaviour is also found at the shell level in at least some posix systems , including linux , but never in accessing files and directories through operating system calls windows domain clients may subscribe to a windows service called distributed link tracking to track the changes in files and folders to which they are interested operating systems that make use of variant symbolic links include netbsd , dragonfly bsd , domain/os 