a symbolic link contains a text string that is automatically interpreted and followed by the operating system as a path to another file or directory the symbolic link is a second file that exists independently of its target if a symbolic link points to a target , and sometime later that target is moved , renamed or deleted , the symbolic link is not automatically updated or deleted , but continues to exist and still points to the old target , now a non-existing location or file hard links do not link paths on different volumes or file system , whereas symbolic links may point to any file or directory irrespective of the volumes on which the link and target reside hard links always refer to an existing file , whereas symbolic links may contain an arbitrary path that does not point to anything symbolic links operate transparently for many operations : programs that read or write to files named by a symbolic link will behave as if operating directly on the target file some unix as well as linux distributions use symbolic links extensively in an effort to reorder the file system hierarchy posix and unix-like operating systems in posix-compliant operating systems , symbolic links are created with the symlink symlink , symlinkat when the ln -s flag is specified , the symlink ( ) system call is used instead , creating a symbolic link the following command creates a symbolic link at the command-line interface ( shell ) : ln -s target_path link_path target_path is the relative or absolute path to which the symbolic link should point after creating the symbolic link , it may generally be treated as an alias for the target the rm ( delete file ) command , however , removes the link itself , not the target file when a directory listing of a symbolic link that points to a directory is requested , only the link itself will be displayed in order to obtain a listing of the linked directory , the path must include a trailing directory separator character ( '/ ' , slash ) note : in the example below do not create '' three '' directory before creation of link in /tmp directory the file system permissions of a symbolic link are not used ; the access modes of the target file are controlled by the target file 's own permissions unlike junction points , a symbolic link can also point to a file or remote server message block ( smb ) network path symbolic links , msdn library , win32 and com development , 2008-01-18 however , the implementation varies from unix symbolic links in several ways for example , windows vista users must manually indicate when creating a symbolic link whether it is a file or a directory createsymboliclink function , msdn library , win32 and com development windows 7 and vista support a maximum of 31 reparse points ( and therefore symbolic links ) for a given path ( i.e only software programs that understand shortcuts ( such as the windows shell and file browsers ) treat them as references to other files unlike symbolic links , windows shortcuts maintain their references to their targets even when the target is moved or renamed symbolic drivers for windows xp : file system drivers to enables symbolic links for windows xp ( also mirrored on link shell extension site ) 