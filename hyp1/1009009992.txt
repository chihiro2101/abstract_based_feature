when a designer designs something – whether a house , computer program , or lamp – they must make many decisions about how to solve problems a single problem is documented with its typical place ( the syntax ) , and use ( the grammar ) with the most common and recognized good solution seen in the wild , like the examples seen in dictionary a documented pattern should explain why that solution is good in the pattern 's contexts patterns might be invented or found and studied , such as the naturally occurring patterns of design that characterize human environments purplsoc 2015 proceedings , july 3-5 2015 krems , austria purplsoc meeting on the many open scientific questions , e.g regarding the theoretical background of patterns and the practical implementation of pattern methods in research and teaching like all languages , a pattern language has vocabulary , syntax , and grammar – but a pattern language applies to some complex activity other than communication in pattern languages for design , the parts break down in this way : the language description – the vocabulary – is a collection of named , described solutions to problems in a field of interest perhaps that part of the design can be left empty to save money or other resources ; if people do not need to wait to enter a room , a simple doorway can replace a waiting room in the language description , grammar and syntax cross index ( often with a literal alphabetic index of pattern names ) to other named solutions , so the designer can quickly think from one solution to related , needed solutions , and document them in a logical way in christopher alexander 's book a pattern language , the patterns are in decreasing order by size , with a separate alphabetic index at the same time , if the pattern language has worked well for many projects , there is reason to believe that even a designer who does not completely understand the design problem at first will complete the design process , and the result will be usable many patterns form a language just as words must have grammar and semantic relationships to each other in order to make a spoken language useful , design patterns must be related to each other in position and utility order to form a pattern language eventually all of the remaining design problems are small enough or routine enough to be solved by improvisation by the builders , and the '' design '' is done this explicitly lets a designer explore a design , starting from some small part when this happens , it 's common for a designer to realize that the problem is actually part of a larger solution in the language , therefore , each pattern has to indicate its relationships to other patterns and to the language as a whole the most difficult part of having an outside expert apply a pattern language is in fact to get a reliable , complete list of the problems to be solved the range of situations in which the problems and solutions addressed in a pattern apply is called its context for instance , alexander 's pattern '' a place to wait '' addresses bus stops in the same way as waiting rooms in a surgery , while still proposing helpful and constructive solutions however , even a very abstract pattern will usually contain examples that are , by nature , absolutely concrete and specific alexander gives each pattern a rating by zero , one or two stars , indicating how well they are proven in real-world examples it is generally claimed that all patterns need at least some existing real-world examples a pattern language , as conceived by alexander , contains links from one pattern to another , so when trying to apply one pattern in a project , a designer is pushed to other patterns that are considered helpful in its context in alexander 's book , such links are collected in the '' references '' part , and echoed in the linked pattern 's '' context '' part – thus the overall structure is a directed graph in design patterns , make only little use of pattern linking – possibly because it did not make that much sense for their collection of patterns some examples are architectural patterns , computer science patterns , interaction design patterns , pedagogical patterns , pattern gardening , social action patterns , and group facilitation patterns each pattern describes a problem that occurs over and over again in our environment , and then describes the core solution to that problem , in such a way that you can use the solution a million times over , without ever doing it the same way twice the idea of a pattern language has also been applied in permaculture design leitner , helmut ( 2015 ) : pattern theory : introduction and perspectives on the tracks of christopher alexander 