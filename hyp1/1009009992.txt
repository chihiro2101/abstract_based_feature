what is a pattern ? when a designer designs something – whether a house , computer program , or lamp – they must make many decisions about how to solve problems a single problem is documented with its typical place ( the syntax ) , and use ( the grammar ) with the most common and recognized good solution seen in the wild , like the examples seen in dictionary a documented pattern should explain why that solution is good in the pattern 's contexts patterns might be invented or found and studied , such as the naturally occurring patterns of design that characterize human environments purplsoc 2015 proceedings , july 3-5 2015 krems , austria purplsoc meeting on the many open scientific questions , e.g regarding the theoretical background of patterns and the practical implementation of pattern methods in research and teaching like all languages , a pattern language has vocabulary , syntax , and grammar – but a pattern language applies to some complex activity other than communication in pattern languages for design , the parts break down in this way : the language description – the vocabulary – is a collection of named , described solutions to problems in a field of interest so , for example , the language for architecture describes items like : settlements , buildings , rooms , windows , latches , etc in christopher alexander 's book a pattern language , the patterns are in decreasing order by size , with a separate alphabetic index the web of relationships in the index of the language provides many paths through the design process this simplifies the design work because designers can start the process from any part of the problem they understand and work toward the unknown parts at the same time , if the pattern language has worked well for many projects , there is reason to believe that even a designer who does not completely understand the design problem at first will complete the design process , and the result will be usable just as words must have grammar and semantic relationships to each other in order to make a spoken language useful , design patterns must be related to each other in position and utility order to form a pattern language occasionally , the smaller problems have no solution , and a different larger solution must be selected eventually all of the remaining design problems are small enough or routine enough to be solved by improvisation by the builders , and the '' design '' is done in the language , therefore , each pattern has to indicate its relationships to other patterns and to the language as a whole the desire to empower users of architecture was , in fact , what led alexander to undertake a pattern language project for architecture in the first place still , the problems and solutions described in a pattern can vary in their level of abstraction and generality on the one side , and specificity on the other side patterns can also vary in how far they are proven in the real world alexander gives each pattern a rating by zero , one or two stars , indicating how well they are proven in real-world examples a pattern must characterize the problems that it is meant to solve , the context or situation where these problems arise , and the conditions under which the proposed solutions can be recommended though quite unspecific in its context , the forces in the '' secondary activity '' pattern are very similar to those in '' wireless telephone '' usually the author of a pattern language or collection chooses a generic structure for all the patterns it contains , breaking each into generic sections like context , problem statement , solution etc christopher alexander 's patterns , for instance , each consist of a short name , a rating ( up to two ' ' symbols ) , a sensitizing picture , the context description , the problem statement , a longer part of text with examples and explanations , a solution statement , a sketch and further references a pattern language , as conceived by alexander , contains links from one pattern to another , so when trying to apply one pattern in a project , a designer is pushed to other patterns that are considered helpful in its context in alexander 's book , such links are collected in the '' references '' part , and echoed in the linked pattern 's '' context '' part – thus the overall structure is a directed graph a recipe or other sequential set of steps to be followed , with only one correct path from start to finish , is also not a pattern language christopher alexander 's idea has been adopted in other disciplines , often much more heavily than the original pattern ( architecture ) as depicted in the book a pattern language examples since the 1990s include software design patterns in software engineering and , more generally , architectural pattern ( computer science ) , as well as interaction design patterns 