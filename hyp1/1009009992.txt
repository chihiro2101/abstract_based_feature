what is a pattern ? a single problem is documented with its typical place ( the syntax ) , and use ( the grammar ) with the most common and recognized good solution seen in the wild , like the examples seen in dictionary a documented pattern should explain why that solution is good in the pattern 's contexts patterns might be invented or found and studied , such as the naturally occurring patterns of design that characterize human environments regarding the theoretical background of patterns and the practical implementation of pattern methods in research and teaching like all languages , a pattern language has vocabulary , syntax , and grammar – but a pattern language applies to some complex activity other than communication in pattern languages for design , the parts break down in this way : the language description – the vocabulary – is a collection of named , described solutions to problems in a field of interest for example , rooms have ways to get light , and ways to get people in and out in christopher alexander 's book a pattern language , the patterns are in decreasing order by size , with a separate alphabetic index at the same time , if the pattern language has worked well for many projects , there is reason to believe that even a designer who does not completely understand the design problem at first will complete the design process , and the result will be usable many patterns form a language just as words must have grammar and semantic relationships to each other in order to make a spoken language useful , design patterns must be related to each other in position and utility order to form a pattern language christopher alexander 's work describes a process of decomposition , in which the designer has a problem ( perhaps a commercial assignment ) , selects a solution , then discovers new , smaller problems resulting from the larger solution occasionally , the smaller problems have no solution , and a different larger solution must be selected eventually all of the remaining design problems are small enough or routine enough to be solved by improvisation by the builders , and the '' design '' is done this explicitly lets a designer explore a design , starting from some small part in the language , therefore , each pattern has to indicate its relationships to other patterns and to the language as a whole the most difficult part of having an outside expert apply a pattern language is in fact to get a reliable , complete list of the problems to be solved of course , the people most familiar with the problems are the people that need a design the desire to empower users of architecture was , in fact , what led alexander to undertake a pattern language project for architecture in the first place still , the problems and solutions described in a pattern can vary in their level of abstraction and generality on the one side , and specificity on the other side alexander gives each pattern a rating by zero , one or two stars , indicating how well they are proven in real-world examples the patterns in alexander 's book also vary in their level of scale – some describing how to build a town or neighbourhood , others dealing with individual buildings and the interior of rooms the qualities of a software system , for instance , could be rated by observing whether users spend their time enjoying or struggling with the system usually the author of a pattern language or collection chooses a generic structure for all the patterns it contains , breaking each into generic sections like context , problem statement , solution etc a pattern language , as conceived by alexander , contains links from one pattern to another , so when trying to apply one pattern in a project , a designer is pushed to other patterns that are considered helpful in its context in alexander 's book , such links are collected in the '' references '' part , and echoed in the linked pattern 's '' context '' part – thus the overall structure is a directed graph in design patterns , make only little use of pattern linking – possibly because it did not make that much sense for their collection of patterns christopher alexander , an architect and author , coined the term pattern language examples since the 1990s include software design patterns in software engineering and , more generally , architectural pattern ( computer science ) , as well as interaction design patterns the idea of a pattern language has also been applied in permaculture design 