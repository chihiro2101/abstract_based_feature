what is a pattern ? when a designer designs something – whether a house , computer program , or lamp – they must make many decisions about how to solve problems each pattern has a name , a descriptive entry , and some cross-references , much like a dictionary entry a documented pattern should explain why that solution is good in the pattern 's contexts patterns might be invented or found and studied , such as the naturally occurring patterns of design that characterize human environments like all languages , a pattern language has vocabulary , syntax , and grammar – but a pattern language applies to some complex activity other than communication in pattern languages for design , the parts break down in this way : the language description – the vocabulary – is a collection of named , described solutions to problems in a field of interest so , for example , the language for architecture describes items like : settlements , buildings , rooms , windows , latches , etc each solution includes syntax , a description that shows where the solution fits in a larger , more comprehensive or more abstract design the solution includes grammar that describes how the solution solves a problem or produces a benefit perhaps that part of the design can be left empty to save money or other resources ; if people do not need to wait to enter a room , a simple doorway can replace a waiting room in christopher alexander 's book a pattern language , the patterns are in decreasing order by size , with a separate alphabetic index this simplifies the design work because designers can start the process from any part of the problem they understand and work toward the unknown parts at the same time , if the pattern language has worked well for many projects , there is reason to believe that even a designer who does not completely understand the design problem at first will complete the design process , and the result will be usable eventually all of the remaining design problems are small enough or routine enough to be solved by improvisation by the builders , and the '' design '' is done when this happens , it 's common for a designer to realize that the problem is actually part of a larger solution in the language , therefore , each pattern has to indicate its relationships to other patterns and to the language as a whole this gives the designer using the language a great deal of guidance about the related problems that must be solved the most difficult part of having an outside expert apply a pattern language is in fact to get a reliable , complete list of the problems to be solved so , alexander famously advocated on-site improvisation by concerned , empowered users , alexander , christopher , the oregon project as a powerful way to form very workable large-scale initial solutions , maximizing the utility of a design , and minimizing the design rework the desire to empower users of architecture was , in fact , what led alexander to undertake a pattern language project for architecture in the first place for instance , alexander 's pattern '' a place to wait '' addresses bus stops in the same way as waiting rooms in a surgery , while still proposing helpful and constructive solutions still , the problems and solutions described in a pattern can vary in their level of abstraction and generality on the one side , and specificity on the other side usually the author of a pattern language or collection chooses a generic structure for all the patterns it contains , breaking each into generic sections like context , problem statement , solution etc portland urban architecture research laboratory symposium 2009 , presentation by 4 of 6 original authors of a pattern language some examples are architectural patterns , computer science patterns , interaction design patterns , pedagogical patterns , pattern gardening , social action patterns , and group facilitation patterns christopher alexander , an architect and author , coined the term pattern language the framework and philosophy of the '' pattern language '' approach was initially popularized in the book a pattern language that was written by christopher alexander and five colleagues at the center for environmental structure in berkeley , california in the late 1970s '' a pattern language is a network of patterns that call upon one another examples since the 1990s include software design patterns in software engineering and , more generally , architectural pattern ( computer science ) , as well as interaction design patterns a pattern language : towns , buildings , construction 