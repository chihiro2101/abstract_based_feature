the requirements of an ordinary prng are also satisfied by a cryptographically secure prng , but the reverse is not true csprng requirements fall into two groups : first , that they pass statistical randomness tests ; and secondly , that they hold up well under serious attack , even when part of their initial or running state becomes available to an attacker additionally , if there is an entropy input while running , it should be infeasible to use knowledge of the input 's state to predict future conditions of the csprng state : : example : if the csprng under consideration produces output by computing bits of π in sequence , starting from some unknown point in the binary expansion , it may well satisfy the next-bit test and thus be statistically random , as π appears to be a random sequence specialized statistical tests may be found specially tuned to such a prng that shows the random numbers not to be truly random : when the maximum number of bits output from this prng is equal to the 2 blocksize , the resulting output delivers the mathematically expected security level that the key size would be expected to generate , but the output is shown to not be indistinguishable from a true random number generator when the maximum number of bits output from this prng is less than it , the expected security level is delivered and the output appears to be indistinguishable from a true random number generator there are also standards for statistical testing of new csprng designs : a statistical test suite for random and pseudorandom number generators , nist special publication 800-22 a security analysis of the nist sp 800-90 elliptic curve random number generator , daniel r cryptanalysis of the dual elliptic curve pseudorandom generator , berry schoenmakers and andrey sidorenko , iacr eprint 2006/190 