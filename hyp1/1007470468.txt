that same year , the first pattern languages of programming conference was held , and the following year the portland pattern repository was set up for documentation of design patterns notable books in the design pattern genre include : although design patterns have been applied practically for a long time , formalization of the concept of design patterns languished for several years reusing design patterns helps to prevent such subtle issues , and it also improves code readability for coders and architects who are familiar with the patterns by definition , a pattern must be programmed anew into each application that uses it design patterns provide general solutions , documented in a format that does not require specifics tied to a particular problem design patterns are composed of several sections ( see below ) these sections describe a design motif : a prototypical micro-architecture that developers copy and adapt to their particular designs to solve the recurrent problem described by the design pattern developers use the design pattern by introducing in their designs this prototypical micro-architecture , which means that micro-architectures in their designs will have structure and organization similar to the chosen design motif the annual pattern languages of programming conference proceedings pattern languages of programming , conference proceedings ( annual , 1994â€” ) include many examples of domain-specific patterns related patterns : other patterns that have some relationship with the pattern ; discussion of the differences between the pattern and similar patterns related observations were made by hannemann and kiczales who implemented several of the 23 design patterns using an aspect-oriented programming ( aspectj ) and showed that code-level dependencies were removed from the implementations of 17 of the 23 design patterns and that aspect-oriented programming could simplify the implementations of design patterns 