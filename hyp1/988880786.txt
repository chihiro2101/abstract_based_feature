the crossbar switch has the property of being able to connect n inputs to n outputs in any bijection combination , so it can connect any caller to any non-busy receiver , a property given the technical term '' nonblocking '' however , the crossbar switch does so at the expense of using n 2 ( n squared ) simple spst switches not only did the switch require too much space , but the metal bars containing the switch contacts would become so long that they would sag and become unreliable engineers also noticed that at any time , each bar of a crossbar switch was only making a single connection the obvious way to emulate a crossbar switch was to find some way to build it from smaller crossbar switches if a crossbar switch could be emulated by some arrangement of smaller crossbar switches , then these smaller crossbar switches could also , in turn be emulated by even smaller crossbar switches the next approach was to break apart the crossbar switch into three layers of smaller crossbar switches intuitively this seems to mean that the number of inputs and the number of outputs can always be equal in each subswitch , but intuition does not prove this can be done nor does it tell us how to do so suppose we want to synthesize a 16 by 16 crossbar switch the design could have 4 subswitches on the input side , each with 4 inputs , for 16 total inputs further , on the output side , we could also have 4 output subswitches , each with 4 outputs , for a total of 16 outputs since telephone switches are symmetric ( callers and callees are interchangeable ) , the same logic will apply to the output layer , and the middle subswitches will be '' square '' , having the same number of inputs as outputs the basic algorithm for managing a three-layer switch is to search the middle subswitches for a middle subswitch that has unused wires to the needed input and output switches once a connectible middle subswitch is found , connecting to the correct inputs and outputs in the input and output switches is trivial theoretically , in the example , only four central switches are needed , each with exactly one connection to each input switch and one connection to each output switch if an input switch is half-full , it has connections via two middle switches for this reason , sometimes this switch arrangement is called a '' 2n & minus ; 1 switch '' , where n is the number of input ports of the input subswitches but three layers of 100 100 & times ; 100 subswitches would use only 300 10,000 contact subswitches , or 3 million contacts since , prior to the arrival of the new connection , the input and output subswitches each had at least one unused connection , both of these unused links must exist the algorithm finds a new arrangement of the connections through the middle subswitches a and b which includes all of the existing connections , plus the desired new connection the algorithm proper only cares about the internal connections from input to output switch , although a practical implementation also has to keep track of the correct input and output switch connections each connection is linked to at most two others by a shared input or output subswitch , forming one link in a '' chain '' of connections assign it the path from its input subswitch , through middle subswitch a , to its output subswitch if this first connection 's output subswitch has a second connection , assign that second connection a path from its input subswitch through subswitch b in the first case , go back to the new connection 's input subswitch and follow its chain backward , assigning connections to paths through middle subswitches b and a in the same alternating pattern if a test fails , the software isolates the exact circuit board by reading the failure from several external switches conceptually , the crossbar switches of the three-stage switch can each be further decomposed into smaller crossbar switches design advantage : time-division switches have only one input and output wire 