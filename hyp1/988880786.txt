the crossbar switch has the property of being able to connect n inputs to n outputs in any bijection combination , so it can connect any caller to any non-busy receiver , a property given the technical term '' nonblocking '' however , the crossbar switch does so at the expense of using n 2 ( n squared ) simple spst switches the obvious way to emulate a crossbar switch was to find some way to build it from smaller crossbar switches if a crossbar switch could be emulated by some arrangement of smaller crossbar switches , then these smaller crossbar switches could also , in turn be emulated by even smaller crossbar switches the switching fabric could become very efficient , and possibly even be created from standardized parts the next approach was to break apart the crossbar switch into three layers of smaller crossbar switches '' the smaller switches are less massive , more reliable , and generally easier to build , and therefore less expensive intuitively this seems to mean that the number of inputs and the number of outputs can always be equal in each subswitch , but intuition does not prove this can be done nor does it tell us how to do so further , on the output side , we could also have 4 output subswitches , each with 4 outputs , for a total of 16 outputs the question is how many middle subswitches are needed , and therefore how many total wires should connect the input layer to the middle layer since telephone switches are symmetric ( callers and callees are interchangeable ) , the same logic will apply to the output layer , and the middle subswitches will be '' square '' , having the same number of inputs as outputs the number of middle subswitches depends on the algorithm used to allocate connection to them the basic algorithm for managing a three-layer switch is to search the middle subswitches for a middle subswitch that has unused wires to the needed input and output switches theoretically , in the example , only four central switches are needed , each with exactly one connection to each input switch and one connection to each output switch this is called a '' minimal spanning switch , '' and managing it was the holy grail of the bell labs ' investigations however , a bit of work with a pencil and paper will show that it is easy to get such a minimal switch into conditions in which no single middle switch has a connection to both the needed input switch and the needed output switch if an input switch is half-full , it has connections via two middle switches if an output switch is also half full with connections from the other two middle switches , then there is no remaining middle switch which can provide a path between that input and output the crucial discovery was a way to reorganize connections in the middle switches to '' trade wires '' so that a new connection could be completed since , prior to the arrival of the new connection , the input and output subswitches each had at least one unused connection , both of these unused links must exist in this list , each input subswitch can appear in at most two connections : one to subswitch a , and one to subswitch b each connection is linked to at most two others by a shared input or output subswitch , forming one link in a '' chain '' of connections assign it the path from its input subswitch , through middle subswitch a , to its output subswitch in the first case , go back to the new connection 's input subswitch and follow its chain backward , assigning connections to paths through middle subswitches b and a in the same alternating pattern when this is done , each input or output subswitch in the chain has at most two connections passing through it , and they are assigned to different middle switches after the new connection pattern is designed in the software , then the electronics of the switch can actually be reprogrammed , physically moving the connections conceptually , the crossbar switches of the three-stage switch can each be further decomposed into smaller crossbar switches if a switch 's line fails , all lines of a switch are marked as in use 