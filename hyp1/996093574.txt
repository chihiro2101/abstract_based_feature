using the command design pattern can solve these problems : coupling the invoker of a request to a particular request should be avoided it should be possible to configure an object ( that invokes a request ) with a request implementing ( hard-wiring ) a request directly into a class is inflexible because it couples the class to a particular request at compile-time , which makes it impossible to specify a request at run-time using the command design pattern describes the following solution : define separate ( command ) objects that encapsulate a request a class delegates a request to a command object instead of implementing a particular request directly see also the uml class and sequence diagram below instead , invoker refers to the command interface to perform a request ( command.execute ( ) ) , which makes the invoker independent of how the request is performed the command1 class implements the command interface by performing an action on a receiver ( receiver1.action1 ( ) ) the uml sequence diagram shows the run-time interactions : the invoker object calls execute ( ) on a command1 object command1 calls action1 ( ) on a receiver1 object , which performs the request ; gui buttons and menu items : in swing and borland delphi programming , an is a command object when the user wants to undo a command , the program simply pops the most recent command object and executes its method ; networking : it is possible to send whole command objects across the network to be executed on the other machines , for example player actions in computer games if the former command is added twice to an undo stack , both items on the stack refer to the same command instance command object , routed command object , action object : a singleton object ( e.g the receiver object owns the method that is called by the command 's execute method command object , routed event arguments , event object : the object that is passed from the source to the command/action object , to the target object to the code that does the work as a result , the command object no longer contains a reference to the target object nor a reference to the application code 