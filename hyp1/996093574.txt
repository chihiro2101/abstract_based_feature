using the command design pattern can solve these problems : coupling the invoker of a request to a particular request should be avoided it should be possible to configure an object ( that invokes a request ) with a request implementing ( hard-wiring ) a request directly into a class is inflexible because it couples the class to a particular request at compile-time , which makes it impossible to specify a request at run-time using the command design pattern describes the following solution : define separate ( command ) objects that encapsulate a request a class delegates a request to a command object instead of implementing a particular request directly this enables one to configure a class with a command object that is used to perform a request in the above uml class diagram , the invoker class does n't implement a request directly instead , invoker refers to the command interface to perform a request ( command.execute ( ) ) , which makes the invoker independent of how the request is performed the command1 class implements the command interface by performing an action on a receiver ( receiver1.action1 ( ) ) the uml sequence diagram shows the run-time interactions : the invoker object calls execute ( ) on a command1 object command1 calls action1 ( ) on a receiver1 object , which performs the request in addition to the ability to perform the desired command , an may have an associated icon , keyboard shortcut , tooltip text , and so on if the program embeds a scripting engine , each command object can implement a method , and user actions can then be easily recorded as scripts when the user wants to undo a command , the program simply pops the most recent command object and executes its method if each command object has a method , the program can easily estimate the total duration it may refer to running the code identified by the command object 's execute method command object , routed event arguments , event object : the object that is passed from the source to the command/action object , to the target object to the code that does the work as a result , the command object no longer contains a reference to the target object nor a reference to the application code 