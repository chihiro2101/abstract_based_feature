an md5 hash of this passphrase can be cracked in 4 seconds using crackstation.net , indicating that the phrase is found in password cracking databases ) using this guideline , to achieve the 80-bit strength recommended for high security ( non-military ) by nist , a passphrase would need to be 58 characters long , assuming a composition that includes uppercase and alphanumeric for example , the characters in five-letter words each contain 2.3 bits of entropy , which would mean only a 35-character passphrase is necessary to achieve 80 bit strength if the words or components of a passphrase may be found in a language dictionary—especially one available as electronic input to a software program—the passphrase is rendered more vulnerable to dictionary attack however , the required effort ( in time and cost ) can be made impracticably high if there are enough words in the passphrase and how randomly they are chosen and ordered in the passphrase where the password data ( hopefully ) can not be extracted ) but passwords are typically not safe to use as keys for standalone security systems ( e.g , encryption systems ) that expose data to enable offline password guessing by an attacker a key derivation function is used , involving many thousands of iterations ( salted & hashed ) , to slow down password cracking attacks all procedures for picking a passphrase involve a tradeoff between security and ease of use ; security should be at least '' adequate '' while not '' too seriously '' annoying users another supplementary approach to frustrating brute-force attacks is to derive the key from the passphrase using a key derivation function , such as pbkdf2 as described in rfc 2898 diceware page xkcd password strength common-viewed explanation of concept 