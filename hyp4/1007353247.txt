the introduction of the mainframe-based relational database during the 1970s led to a proliferation of data access methods generally these systems operated together with a simple command processor that allowed users to type in english-like commands , and receive output these systems may or may not allow other applications to access the data directly , and those that did use a wide variety of methodologies since the sql language had only rudimentary programming features , users often wanted to use sql within a program written in another language , say fortran or c results returned from the statements would be interpreted back into c data formats like char using similar library code older mainframe databases , and the newer microcomputer based systems that were based on them , generally did not have a sql-like command processor between the user and the database engine blueprint , developed for 1-2-3 , supported a variety of data sources , including sql/ds , db2 , focus and a variety of similar mainframe systems , as well as microcomputer systems like dbase and the early microsoft/ashton-tate efforts that would eventually develop into microsoft sql server 1 , 69 unlike the later odbc , blueprint was a purely code-based system , lacking anything approximating a command language like sql db-library was aided by an industry-wide move from library systems that were tightly linked to a specific language , to library systems that were provided by the operating system and required the languages on that platform to conform to its standards in spite of blueprint 's great lead – it was running when msda was still a paper project – lotus eventually joined the msda efforts as it became clear that sql would become the de facto database standard the commands in the api were split into groups ; the core group was identical to the cli , the level 1 extensions were commands that would be easy to implement in drivers , while level 2 commands contained the more advanced features like cursors a proposed standard was released in december 1991 , and industry input was gathered and worked into the system through 1992 , resulting in yet another name change to odbc however , jet did not use sql ; like datalens , the interface was in c and consisted of data structures and function calls the sag standardization efforts presented an opportunity for microsoft to adapt their jet system to the new cli standard this would not only make windows a premier platform for cli development , but also allow users to use sql to access both jet and other databases as well to solve this , ms partnered with simba technologies to use their existing query processor , simba microsoft included drivers for excel to turn its spreadsheet documents into sql-accessible database tables some of this was unavoidable due to the path that the calls took through the jet-based stack ; odbc calls to sql databases were first converted from simba technologies 's sql dialect to jet 's internal c-based format , then passed to a driver for conversion back into sql calls for the database visigenic ported odbc to a wide variety of unix platforms , where odbc quickly became the de facto standard several new systems followed which further turned their attention from odbc , including activex data objects ( ado ) and ado.net , which interacted more or less with odbc over their lifetimes sun microsystems used the odbc system as the basis for their own open standard , java database connectivity ( jdbc ) jdbc-to-odbc bridges allow java-based programs to access data sources through odbc drivers on platforms lacking a native jdbc driver , although these are now relatively rare inversely , odbc-to-jdbc bridges allow c-based programs to access data sources through jdbc drivers on platforms or from databases lacking suitable odbc drivers it is not uncommon to find odbc drivers for database engines that are meant to be embedded , like sqlite , as a way to allow existing tools to act as front-ends to these engines for testing and debugging werner , christian ( 2018 ) '' sqlite odbc driver '' , 2018-02-24 however , the rise of thin client computing using html as an intermediate format has reduced the need for odbc for instance , a printer driver presents a standard set of printing commands , the api , to applications using the printing system programmers usually use such a bridge when they lack an odbc driver for some database but have access to a jdbc driver programmers usually use such a bridge when a given database lacks an ole db provider , but is accessible through an odbc driver third parties have also developed such , notably openlink software whose 64-bit ole db provider for odbc data sources filled the gap when microsoft initially deprecated this bridge for their 64-bit os programmers usually use such a bridge when a given database lacks an ado.net provider , but is accessible through an odbc driver gnu data access java database connectivity ( jdbc ) windows open services architecture odbc administrator 