the basic building blocks of clos are methods , classes , instances of those classes , and generic functions clos provides macros to define those : defclass , defmethod , and defgeneric classes can have multiple superclasses , a list of slots ( member variables in c++/java parlance ) and a special metaclass each slot has a name and the value of a slot can be accessed by that name using the function slot-value each slot in a clos class must have a unique name clos is a multiple dispatch system another unusual feature is that methods do not '' belong '' to classes ; classes do not provide a namespace for generic functions or methods methods in clos are grouped into generic functions ) , clos dispatch works also with these non-clos classes clos also supports dispatch over individual objects ( eql specializers ) dispatch in clos is also different from most oo languages : given a list of arguments , a list of applicable methods is determined changing the method combination also may lead to different effective methods flavors is mostly obsolete , though implementations for common lisp do exist pcl is widely ported and still provides the base for the clos implementation of several common lisp implementations '' commonloops : merging lisp and object-oriented programming '' , by daniel g the common lisp object system : an overview by richard p common lisp hyperspec , chapter 7 : objects 