the basic building blocks of clos are methods , classes , instances of those classes , and generic functions clos provides macros to define those : defclass , defmethod , and defgeneric each slot in a clos class must have a unique name clos is a multiple dispatch system most oo languages are single-dispatch , meaning that methods are only specialized on the first argument methods in clos are grouped into generic functions a generic function is an object which is callable like a function and which associates a collection of methods with a shared name and argument structure , each specialized for different arguments ) , clos dispatch works also with these non-clos classes clos also supports dispatch over individual objects ( eql specializers ) dispatch in clos is also different from most oo languages : given a list of arguments , a list of applicable methods is determined outside of the ansi common lisp standard , there is a widely implemented extension to clos called the metaobject protocol ( mop ) the various common lisp implementations have slightly different support for the meta-object protocol flavors is mostly obsolete , though implementations for common lisp do exist pcl is implemented mostly in portable common lisp with only a few system dependent parts sonya keene , object-oriented programming in common lisp : a programmer 's guide to clos , 1988 , addison-wesley miller , understanding clos : the common lisp object system , 1991 , digital press , andreas paepcke , object-oriented programming : the clos perspective , 1993 , the mit press common lisp hyperspec , chapter 7 : objects 