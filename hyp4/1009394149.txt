left just as software engineering ( as a process ) is defined by differing methodologies , so the programming languages ( as models of computation ) are defined by differing paradigms in object-oriented programming , programs are treated as a set of interacting objects programming paradigms can also be compared with programming models , which allows invoking an execution model by using only an api programming models can also be classified into paradigms based on features of the execution model for parallel computing , using a programming model instead of a language is common these can be considered flavors of programming paradigm that apply to only parallel languages and programming models some programming language researchers criticise the notion of paradigms as a classification of programming languages , e.g . they argue that many programming languages can not be strictly classified into one paradigm , but rather include features from several paradigms see comparison of multi-paradigm programming languages following the widespread use of procedural languages , object-oriented programming ( oop ) languages were created , such as simula , smalltalk , c++ , c , eiffel , php , and java high level assembly ( hla ) is an example of this that fully supports advanced data types and object-oriented assembly language programming despite its early origins in these languages , the computer is told what the problem is , not how to solve the problem the program is structured as a set of properties to find in the expected result , not as a procedure to follow most programming languages support more than one programming paradigm to allow programmers to use the most suitable programming style and associated language constructs for a given job . 