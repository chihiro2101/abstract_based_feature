in the context of program correctness , static analysis can discover vulnerabilities during the development phase of the program pixy : a static analysis tool for detecting web application vulnerabilities in security and privacy , 2006 ieee symposium on ( pp an optimizing compiler is at liberty to generate code that does anything at runtime even crashes if it encounters source code whose semantics are unspecified by the language standard in use the purpose of control-flow analysis is to obtain information about which functions can be called at various points during the execution of a program one of the most known examples of data-flow analysis is taint checking which consists of considering all variables which contain user supplied data which is considered '' tainted '' , i.e abstract interpretation allows the extraction of information about a possible execution of a program without actually executing the program dynamic analysis can use runtime knowledge of the program to increase the precision of the analysis , while also providing runtime protection , but it can only analyze a single execution of the problem and might degrade the program ’ s performance due to the runtime checks for a given subset of a program ’ s behavior , program slicing consists of reducing the program to the minimum form that still produces the selected behavior 