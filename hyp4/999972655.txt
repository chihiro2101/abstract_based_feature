in the context of program correctness , static analysis can discover vulnerabilities during the development phase of the program these vulnerabilities are easier to correct than the ones found during the testing phase since static analysis leads to the root of the vulnerability the purpose of control-flow analysis is to obtain information about which functions can be called at various points during the execution of a program data-flow analysis is a technique designed to gather information about the values at each point of the program and how they change over time insecure and preventing those variables from being used until they have been sanitized abstract interpretation allows the extraction of information about a possible execution of a program without actually executing the program this information can be used by compilers to look for possible optimizations or for certifying a program against certain classes of bugs the tests are performed by executing the program with an input and evaluating its behavior and the produced output for a given subset of a program â€™ s behavior , program slicing consists of reducing the program to the minimum form that still produces the selected behavior 