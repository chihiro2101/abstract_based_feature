in a shared memory multiprocessor system with a separate cache memory for each processor , it is possible to have many copies of shared data : one copy in the main memory and one in the local cache of each processor that requested it when one of the copies of data is changed , the other copies must reflect that change cache coherence is the discipline which ensures that the changes in the values of shared operands ( data ) are propagated throughout the system in a timely fashion the following are the requirements for cache coherence : ; write propagation : changes to the data in any cache must be propagated to other copies ( of that cache line ) in the peer caches one type of data occurring simultaneously in different cache memory is called cache coherence , or in some systems , global memory in a multiprocessor system , consider that more than one processor has cached a copy of the memory location x processor p1 changes the value of s ( in its cached copy ) to 10 following which processor p2 changes the value of s in its own cached copy to 20 p4 on the other hand may see changes made by p1 and p2 in the order in which they are made and hence return 20 on a read to s therefore , in order to satisfy transaction serialization , and hence achieve cache coherence , the following condition along with the previous two mentioned in this section must be met : writes to the same location must be sequenced in other words , if location x received two different values a and b , in this order , from any two processors , the processors can never read location x as b and then read it as a thus , the only difference between the cache coherent system and sequentially consistent system is in the number of address locations the definition talks about ( single memory location for a cache coherent system , and all memory locations for a sequentially consistent system ) multiple copies of same data can exist in different cache simultaneously and if processors are allowed to update their own copies freely , an inconsistent view of memory can result ; write-update : when a write operation is observed to a location that a cache has a copy of , the cache controller updates its own copy of the snooped memory location with the new data 