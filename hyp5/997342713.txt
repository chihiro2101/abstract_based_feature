an important distinction in programming languages is the difference between an object-oriented language and an object-based language conventional message passing discriminates only on the first object and considers that to be '' sending a message '' to that object rather than structure programs as code and data , an object-oriented system integrates the two using the concept of an '' object '' an online shopping system will have objects such as shopping cart , customer , product immutable object : an object set up with a fixed state at creation time and which does not change afterward container object : an object that can contain other objects it can be used equally well as an interface definition language for distributed systems the objects in a distributed computing model tend to be larger grained , longer lasting , and more service-oriented than programming objects a standard method to package distributed objects is via an interface definition language ( idl ) live distributed objects ( or simply live objects ) ostrowski , k owl objects tend to be similar to the kinds of objects used to define application domain models in programming languages such as java and c++ however , there are important distinctions between owl objects and traditional object-oriented programming objects the following table contrasts traditional objects from object-oriented programming languages such as java or c++ with semantic web objects : object lifetime object copy design pattern ( computer science ) business object ( computer science ) actor model 