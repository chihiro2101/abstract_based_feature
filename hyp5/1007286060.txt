semi-formal methods are formalisms and languages that are not considered fully “ formal ” it defers the task of completing the semantics to a later stage , which is then done either by human interpretation or by interpretation through software like code or test case generators formal methods can be used at a number of levels : level 0 : formal specification may be undertaken and then a program developed from this informally this has been dubbed formal methods lite level 1 : formal development and formal verification may be used to produce a program in a more formal manner for example , proofs of properties or refinement from the specification to a program may be undertaken level 2 : theorem provers may be used to undertake fully formal machine-checked proofs proponents of such methods point to the simplicity of their models as a means to expressive clarity ; critics counter that the problem of semantics has just been delayed ( who defines the semantics of the simpler model ? ) proponents note the connection to classical logic ; critics note that such semantics never really describe what a system does ( merely what is true before and afterwards ) some practitioners believe that the formal methods community has overemphasized full formalization of a specification or design as an alternative , various lightweight formal methods , which emphasize partial specification and focused application , have been proposed 256-290 denney 's synthesis of some aspects of the z notation with use case driven development , richard denney , succeeding with use cases : working smart to deliver quality , addison-wesley professional publishing , 2005 , larsen , '' a lightweight approach to formal methods '' , in proceedings of the international workshop on current trends in applied formal methods , boppard , germany , springer-verlag , october 1998 formal methods can be applied at various points through the development process formal methods may be used to give a description of the system to be developed , at whatever level ( s ) of detail desired the need for formal specification systems has been noted for years once a formal specification has been produced , the specification may be used as a guide while the concrete system is developed during the design process ( i.e for example : if the formal specification is in operational semantics , the observed behavior of the concrete system can be compared with the behavior of the specification ( which itself should be executable or simulatable ) if the formal specification is in axiomatic semantics , the preconditions and postconditions of the specification may become assertions in the executable code formal verification is the use of software tools to prove properties of a formal specification , or to prove that a formal model of a system implementation satisfies its specification once a formal specification has been developed , the specification may be used as the basis for proving properties of the specification ( and hopefully by inference the developed system ) there are several other projects of nasa in which formal methods are applied , such as next generation air transportation system , unmanned aircraft system integration in national airspace system , gheorghe , a formal verification has been frequently used in hardware by most of the well-known hardware vendors , such as ibm , intel , and amd in software development , formal methods are mathematical approaches to solving software ( and hardware ) problems at the requirements , specification , and design levels abstract interpretation automated theorem proving design by contract formal methods people formal specification formal verification formal system model checking software engineering specification language 