the file format allows for a comment containing up to 65,535 ( 2 16 −1 ) bytes of data to occur at the end of the file after the central directory also , because the central directory specifies the offset of each file in the archive with respect to the start , it is possible for the first file entry to start at an offset other than zero , although some tools , for example gzip , will not process archive files that do not start with a file entry at offset zero this allows arbitrary data to occur in the file both before and after the zip archive data , and for the archive to still be read by a zip application a side-effect of this is that it is possible to author a file that is both a working zip archive and another format , provided that the other format tolerates arbitrary data at its end , beginning , or middle self-extracting archives ( sfx ) , of the form supported by winzip , take advantage of this , in that they are executable files that conform to the pkzip appnote.txt specification , and can be read by compliant zip tools or libraries such an empty zip file contains only an end of central directory record ( eocd ) : 0x50,0x4b,0x05,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00 the maximum size for both the archive file and the individual files inside it is 4,294,967,295 bytes ( 2 32 −1 bytes , or 4 gib minus 1 byte ) for standard zip zip file format specification to the public , which documented ses the free software project 7-zip also supports aes , but not ses in zip files ( as does its posix port p7zip ) zip files using random access ; and the apache ant tool contains a more complete implementation released under the apache software license zip compression in explorer since the microsoft plus ! pack was released for windows 98 the theoretical maximum compression factor for a raw deflate stream is about 1032 to one , but by exploiting the zip format in unintended ways , zip archives with compression ratios of billions to one can be constructed 