the complexity class np may be viewed as a very simple proof system the protocol is : the prover looks at the input and computes the solution using its unlimited power and returns a polynomial-size proof certificate in the case where a valid proof certificate exists , the prover is always able to make the verifier accept by giving it that certificate in the case where there is no valid proof certificate , however , the input is not in the language , and no prover , however malicious it is , can convince the verifier otherwise , because any proof certificate will be rejected in this presentation , arthur ( the verifier ) is a probabilistic , polynomial-time machine , while merlin ( the prover ) has unbounded resources soundness : if the string is not in the language , no prover , however malicious , will be able to convince the verifier to accept the string with probability exceeding 1/3 public coin protocol versus private coin protocol in the same conference where babai defined his proof system for ma , shafi goldwasser , silvio micali and charles rackoff extended abstract published a paper defining the interactive proof system ipf ( n ) in each round , the verifier performs computation and passes a message to the prover , and the prover performs computation and passes information back to the verifier this is called a public coin protocol , because the random bits ( '' coin flips '' ) are visible to both machines the essential problem with public coins is that if the prover wishes to maliciously convince the verifier to accept a string which is not in the language , it seems like the verifier might be able to thwart its plans if it can hide its internal state from it showed , perhaps surprisingly , that the verifier 's ability to hide coin flips from the prover does it little good after all , in that an arthur–merlin public coin protocol with only two more rounds can recognize all the same languages arthur–merlin games : a randomized proof system , and a hierarchy of complexity classes if we allow the probabilistic verifier machine and the all-powerful prover to interact for a polynomial number of rounds , we get the class of problems called ip not only can interactive proof systems solve problems not believed to be in np , but under assumptions about the existence of one-way functions , a prover can convince the verifier of the solution without ever giving the verifier information about the solution in fact , this is so helpful that babai , fortnow , and lund were able to show that mip nexptime , the class of all problems solvable by a nondeterministic machine in exponential time , a very large class it is known that for any constant k , a mip system with k provers and polynomially many rounds can be turned into an equivalent system with only 2 provers , and a constant number of rounds 