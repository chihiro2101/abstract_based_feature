xml schema , published as a w3c recommendation in may 2001 , is one of several xml schema it was the first separate schema language for xml to achieve recommendation status by the w3c because of confusion between xml schema as a specific w3c specification , and the use of the same term to describe schema languages in general , some parts of the user community referred to this language as wxs , an initialism for w3c xml schema , while others referred to it as xsd , an initialism for xml schema definition see schema - w3c see w3c xml schema definition language ( xsd ) 1.1 part 1 : structures in version 1.1 the w3c has chosen to adopt xsd as the preferred name , and that is the name used in this article in its appendix of references , the xsd specification acknowledges the influence of dtds and other early xml schema efforts such as ddml , sox , xml-data , and xdr of those languages , xdr and sox continued to be used and supported for a while after xml schema was published a number of microsoft products supported xdr until the release of msxml 6.0 ( which dropped xdr in favor of xml schema ) in december 2006 these components are usually created by processing a collection of schema documents , which contain the source language definitions of these components in popular usage , however , a schema document is often referred to as a schema a schema document may include other schema documents for the same namespace , and may import schema documents for a different namespace when an instance document is validated against a schema ( a process known as assessment ) , the schema to be used for validation can either be supplied as a parameter to the validation engine , or it can be referenced directly from the instance document using two special attributes , xsi : schemalocation and xsi : nonamespaceschemalocation ( the latter mechanism requires the client invoking validation to trust the document sufficiently to know that it is being validated against the correct schema element declarations may be global or local , allowing the same name to be used for unrelated elements in different parts of an instance document in addition , wildcard particles are allowed , which permit a set of different elements ( perhaps any element provided it is in a certain namespace ) after xml schema-based validation , it is possible to express an xml document 's structure and content in terms of the data model that was implicit during validation the xml schema data model includes : the vocabulary ( element and attribute names ) the content model ( relationships and structure ) the data types this collection of information is called the post-schema-validation infoset ( psvi ) the schema can be used to generate code , referred to as xml data binding content and attribute declarations can not depend on attributes or element context ( this was also listed as a central problem of dtd ) defaults can not be specified separately from the declarations ( this makes it hard to make families of schemas that only differ in the default values ) ; element defaults can only be character data ( not containing markup ) 