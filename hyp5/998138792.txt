the earliest modes of operation , ecb , cbc , ofb , and cfb ( see below for all ) , date back to 1981 and were specified in fips 81 , des modes of operation in 2001 , the us national institute of standards and technology ( nist ) revised its list of approved modes of operation by including aes as a block cipher and adding ctr mode in sp800-38a , recommendation for block cipher modes of operation finally , in january , 2010 , nist added xts-aes in sp800-38e , recommendation for block cipher modes of operation : the xts-aes mode for confidentiality on storage devices the block cipher modes ecb , cbc , ofb , cfb , ctr , and xts provide confidentiality , but they do not protect against accidental modification or malicious tampering hmac was approved in 2002 as fips 198 , the keyed-hash message authentication code ( hmac ) , cmac was released in 2005 under sp800-38b , recommendation for block cipher modes of operation : the cmac mode for authentication , and gmac was formalized in 2007 under sp800-38d , recommendation for block cipher modes of operation : galois/counter mode ( gcm ) and gmac they therefore began to supply modes which combined confidentiality and data integrity into a single cryptographic primitive ( an encryption algorithm ) an initialization vector ( iv ) or starting variable ( sv ) is a block of bits that is used by several modes to randomize the encryption and hence to produce distinct ciphertexts even if the same plaintext is encrypted multiple times , without the need for a slower re-keying process for most block cipher modes it is important that an initialization vector is never reused under the same key , i.e in cbc mode , the iv must be unpredictable ( random or pseudorandom ) at encryption time ; in particular , the ( previously ) common practice of re-using the last ciphertext block of a message as the iv for the next message is insecure ( for example , this method was used by ssl 2.0 ) for some keys an all-zero initialization vector may generate some block cipher modes ( cfb-8 , ofb-8 ) to get internal state stuck at all-zero for cfb-8 , an all-zero iv and an all-zero plaintext , causes 1/256 of keys to generate no encryption , plaintext is returned as ciphertext a block cipher works on units of a fixed size ( known as a block size ) , but messages come in a variety of lengths so some modes ( namely ecb and cbc ) require that the final block be padded before encryption the simplest is to add null bytes to the plaintext to bring its length up to a multiple of the block size , but care must be taken that the original length of the plaintext can be recovered ; this is trivial , for example , if the plaintext is a c style string which contains no null bytes except at the end slightly more complex is the original des method , which is to add a single one bit , followed by enough zero bits to fill out the block ; if the message ends on a block boundary , a whole padding block will be added schneier and ferguson suggest two possibilities , both simple : append a byte with value 128 ( hex 80 ) , followed by as many zero bytes as needed to fill the last block , or pad the last block with n bytes all with value n the last partial block of plaintext is xored with the first few bytes of the last keystream block , producing a final ciphertext block that is the same size as the final partial plaintext block this characteristic of stream ciphers makes them suitable for applications that require the encrypted ciphertext data to be the same size as the original plaintext data , and for applications that transmit data in streaming form where it is inconvenient to add padding bytes counter with cipher block chaining message authentication code ( ccm ) ccm mode is only defined for block ciphers with a block length of 128 bits different cipher modes mask patterns by cascading outputs from the cipher block or other globally deterministic variables into the subsequent cipher block nist maintains a list of proposed modes for block ciphers at modes development they are generally used in modes of operation similar to the block modes described here 