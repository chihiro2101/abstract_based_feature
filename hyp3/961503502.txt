the basic relational building block is the domain ( somewhat similar , but not equal to , a data type ) a relational database schema is defined as a tuple s ( d , r , h ) where d is the domain of atomic values ( see relational model for more on the notions of domain and atomic value ) , r is a finite set of relation names , and : h : r → 2 c a function that associates a header with each relation name in r finally we define a relational database given a schema s ( d , r , h ) as a function : db : r → 2 t d that maps the relation names in r to finite subsets of t d , such that for every relation name r in r and tuple t in db ( r ) it holds that : dom ( t ) h ( r ) the formulas are defined given a database schema s ( d , r , h ) and a partial function type : v ⇸ 2 c , called at type assignment , that assigns headers to some tuple variables we then define the set of atomic formulas as , type with the following rules : if v and w in v , a in type ( v ) and b in type ( w ) then the formula v.a w.b is in as , type , if v in v , a in type ( v ) and k denotes a value in d then the formula v.a k is in as , type , and if v in v , r in r and type ( v ) h ( r ) then the formula r ( v ) is in as , type 