since the calculus is a query language for relational databases we first have to define a relational database a relational database schema is defined as a tuple s ( d , r , h ) where d is the domain of atomic values ( see relational model for more on the notions of domain and atomic value ) , r is a finite set of relation names , and : h : r → 2 c a function that associates a header with each relation name in r the latter requirement simply says that all the tuples in a relation should contain the same column names , namely those defined for it in the schema we then define the set of atomic formulas as , type with the following rules : if v and w in v , a in type ( v ) and b in type ( w ) then the formula v.a w.b is in as , type , if v in v , a in type ( v ) and k denotes a value in d then the formula v.a k is in as , type , and if v in v , r in r and type ( v ) h ( r ) then the formula r ( v ) is in as , type des – an educational tool for working with tuple relational calculus and other formal languages winrdbi – an educational tool for working with tuple relational calculus and other formal languages 