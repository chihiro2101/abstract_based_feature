the simplest primality test is trial division : given an input number , n , check whether it is evenly divisible by any prime number between 2 and ( i.e otherwise , it is prime riesel ( 1994 ) pp.2-3 for example , consider the number 100 , which is evenly divisible by these numbers : :2 , 4 , 5 , 10 , 20 , 25 , 50 note that the largest factor , 50 , is half of 100 let 's use trial division to test the primality of 17 leonard adleman and ming-deh huang presented an errorless ( but expected polynomial-time ) variant of the elliptic curve primality test unlike the other probabilistic tests , this algorithm produces a primality certificate , and thus can be used to prove that a number is prime a combination of shor 's algorithm , an integer factorization method , with the pocklington primality test could solve the problem in o ( ( \log n ) ^3 ( \log\log n ) ^2 \log\log\log n ) ( note that running time is measured in terms of the size of the input , which in this case is ~ log & nbsp ; n , that being the number of bits needed to represent the number n the adleman–pomerance–rumely primality test from 1983 put primes in qp ( quasi-polynomial time ) , which is not known to be comparable with the classes mentioned above certain number-theoretic methods exist for testing whether a number is prime , such as the lucas test and proth 's test 